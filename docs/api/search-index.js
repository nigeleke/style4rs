var searchIndex = JSON.parse('{\
"style4rs":{"doc":"","t":"DLLLLLLLLLLLLLLOOOOLLL","n":["Style4rsBuilder","borrow","borrow_mut","build","build_using","default","deref","deref_mut","deserialize","drop","from","init","into","pointer_metadata","rs_to_css","style","style_sheet","style_sheet_str","style_str","try_from","try_into","type_id"],"q":[[0,"style4rs"],[22,"std::io::error"],[23,"core::result"],[24,"alloc::string"],[25,"core::option"],[26,"rkyv::with"],[27,"core::any"]],"d":["","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,6,6,6],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[3,[1,2]]]],[[[5,[4]],[5,[4]]],[[3,[1,2]]]],[[],6],[7,-1,[]],[7,-1,[]],[[-1,-2],[[3,[[8,[-3,-4]]]]],[],[],[],[]],[7,1],[-1,-1,[]],[[],7],[-1,-2,[],[]],[[]],[[6,9],1],0,0,0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[15,"tuple"],[3,"Error",22],[4,"Result",23],[3,"String",24],[4,"Option",25],[3,"Style4rsBuilder",0],[15,"usize"],[3,"With",26],[15,"str"],[3,"TypeId",27]]},\
"style4rs_builder":{"doc":"","t":"DLLLLLLLLLLLLLLLLL","n":["Style4rsBuilder","borrow","borrow_mut","build","build_using","default","deref","deref_mut","deserialize","drop","from","init","into","pointer_metadata","rs_to_css","try_from","try_into","type_id"],"q":[[0,"style4rs_builder"],[18,"std::io::error"],[19,"alloc::string"],[20,"core::option"],[21,"rkyv::with"],[22,"core::result"],[23,"core::any"]],"d":["","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[2,[1]]]],[[[4,[3]],[4,[3]]],[[2,[1]]]],[[],5],[6,-1,[]],[6,-1,[]],[[-1,-2],[[8,[[7,[-3,-4]]]]],[],[],[],[]],[6,1],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[]],[[5,9],1],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[15,"tuple"],[6,"Result",18],[3,"String",19],[4,"Option",20],[3,"Style4rsBuilder",0],[15,"usize"],[3,"With",21],[4,"Result",22],[15,"str"],[3,"TypeId",23]]},\
"style4rs_macros":{"doc":"","t":"OOOO","n":["style","style_sheet","style_sheet_str","style_str"],"q":[[0,"style4rs_macros"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[]},\
"style4rs_test":{"doc":"","t":"FFFF","n":["style_class_name","style_sheet_class_name","style_sheet_str_class_name","style_str_class_name"],"q":[[0,"style4rs_test"],[4,"alloc::string"]],"d":["","","",""],"i":[0,0,0,0],"f":[[[],1],[[],1],[[],1],[[],1]],"c":[],"p":[[3,"String",4]]},\
"style4rs_util":{"doc":"","t":"FFFFF","n":["css_to_css_with_class_name","file_path_tokens_to_class_name_and_css","str_as_class_name","tokens_as_class_name","tokens_to_class_name_and_css"],"q":[[0,"style4rs_util"],[5,"alloc::string"],[6,"core::result"],[7,"proc_macro2"]],"d":["Compile css and return with deterministic class name …","Return css with deterministic class name inserted, from a …","Create a deterministic class name based on the string.","Create a deterministic class name based on the TokenStream.","Return css with deterministic class name inserted, from a …"],"i":[0,0,0,0,0],"f":[[[1,1],[[3,[2,2]]]],[4,[[3,[[5,[2,2]],2]]]],[1,2],[4,2],[4,[[3,[[5,[2,2]],2]]]]],"c":[],"p":[[15,"str"],[3,"String",5],[4,"Result",6],[3,"TokenStream",7],[15,"tuple"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
